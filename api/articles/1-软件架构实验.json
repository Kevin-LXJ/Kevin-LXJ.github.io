{"title":"软件架构实验","uid":"0957f802a029d0594b09e3b585318be7","slug":"1-软件架构实验","date":"2023-05-03T06:47:49.000Z","updated":"2023-05-04T12:32:21.486Z","comments":true,"path":"api/articles/1-软件架构实验.json","keywords":null,"cover":[],"content":"<h1 id=\"软件架构实验\"><a class=\"markdownIt-Anchor\" href=\"#软件架构实验\"></a> 软件架构实验</h1>\n<h2 id=\"题目1\"><a class=\"markdownIt-Anchor\" href=\"#题目1\"></a> 题目1</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用原始socket()实现一个C/S架构的应用，支持服务器时间回显示</p>\n<blockquote>\n<p>要求：从客户端发送命令，接收服务器的时间并显示到终端</p></blockquote>\n</blockquote>\n<h3 id=\"相关原理\"><a class=\"markdownIt-Anchor\" href=\"#相关原理\"></a> 相关原理</h3>\n<h4 id=\"cs结构\"><a class=\"markdownIt-Anchor\" href=\"#cs结构\"></a> C/S结构</h4>\n<h4 id=\"socket\"><a class=\"markdownIt-Anchor\" href=\"#socket\"></a> socket</h4>\n<h3 id=\"python实现\"><a class=\"markdownIt-Anchor\" href=\"#python实现\"></a> python实现</h3>\n<ul>\n<li>\n<p>环境：python3.9.13</p>\n</li>\n<li>\n<p>编辑器：vscode</p>\n</li>\n<li>\n<p>终端：powershell/Windows terminal</p>\n</li>\n<li>\n<p>服务器端</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import socket\nimport time\n# 主机地址\nhost &#x3D; &#39;localhost&#39;\n# 端口号\nport &#x3D; 8888\n# 接收数据的最大字节数\ndata_payload &#x3D; 2048\n# 最大连接数\nbacklog &#x3D; 5\n\ndef server():\n    # 定义IP地址和端口号\n    server_address &#x3D; (host, port)\n    # 创建一个TCP套接字\n    sock &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)  \n    # 绑定IP地址和端口号\n    sock.bind(server_address)\n    print(&quot;正在开启服务端&quot;)\n    # 监听客户端连接请求，backlog指定最大连接数\n    sock.listen(backlog)  \n    print(&quot;等待客户端连接...&quot;)\n    # 接收客户端连接请求，返回一个新的套接字和客户端地址，阻塞函数，直到有客户端连接才会返回\n    # 创建了一个新的通道并获得了客户端的IP地址\n    client, client_address &#x3D; sock.accept()  \n    \n    while True:\n        # 接收客户端发送的数据并解码\n        client_data &#x3D; client.recv(data_payload).decode() \n        # 如果客户端发送的数据为exit或者为空，则退出 \n        if client_data &#x3D;&#x3D; &quot;exit&quot;:\n            exit(&quot;客户端连接关闭&quot;)\n        print(&quot;接收到客户端数据： %s&quot; % client_data)\n        # 设置变量currentTime来获取系统的当前时间\n        currentTime &#x3D; time.ctime() + &quot;\\r\\n&quot;\n        print(currentTime)\n        # 将当前时间字符串进行编码后发送给客户端\n        client.sendall(currentTime.encode())\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    server()</code></pre>\n<ul>\n<li>客户端</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import socket\n \nhost &#x3D; &#39;localhost&#39;\nport &#x3D; 8888\ndata_payload &#x3D; 2048\n \ndef client():\n    server_address &#x3D; (host , port)\n    sock &#x3D; socket.socket(socket.AF_INET , socket.SOCK_STREAM)\n    # 连接服务端\n    sock.connect(server_address)\n    print(&quot;连接服务端 %s %s&quot; %server_address)# %server_address是一个包含两个参数的元组，需要两个%s来对应 \n    while True:\n        data&#x3D; input(&quot;请输入要发送的数据：&quot;).strip()\n        if not data:\n            continue\n        # 发送数据给服务端\n        sock.sendall(data.encode())  \n        # 如果发送的数据为exit，则退出\n        if data&#x3D;&#x3D;&quot;exit&quot;:\n            print(&quot;已退出客户端&quot;)\n            break\n        # 接收服务端返回的数据\n        reply&#x3D;sock.recv(2048).decode()\n        print(&quot;接收到服务端数据：%s&quot; %reply)\n    sock.close()\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:  \n    client()</code></pre>\n<ul>\n<li>终端测试结果</li>\n</ul>\n<pre class=\"line-numbers language-powerShell\" data-language=\"powerShell\"><code class=\"language-powerShell\"># 开启服务器端\npython server.py</code></pre>\n<pre class=\"line-numbers language-powerShell\" data-language=\"powerShell\"><code class=\"language-powerShell\"># 开启客户端\npython client.py\n# 测试连接\ntest\ntest2\ntest3\n# 退出客户端，关闭连接\nexit</code></pre>\n<ul>\n<li><img src=\"../img/1/py_res.png\" alt=\"\" /></li>\n</ul>\n<h3 id=\"java实现\"><a class=\"markdownIt-Anchor\" href=\"#java实现\"></a> Java实现</h3>\n<h3 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\"></a> 参考文章</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>python网络编程</p>\n<ul>\n<li><a href=\"\"></a><br />\njava网络编程</li>\n<li><a href=\"\"></a></li>\n</ul></blockquote>\n<h2 id=\"题目2\"><a class=\"markdownIt-Anchor\" href=\"#题目2\"></a> 题目2</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用epoll方式实现一个C/S架构的应用</p>\n<blockquote>\n<p>要求：服务器同时支持多个客户端连接，一个客户端发送消息，服务器转发到其他客户端并回显消息</p></blockquote>\n</blockquote>\n<h3 id=\"相关原理-2\"><a class=\"markdownIt-Anchor\" href=\"#相关原理-2\"></a> 相关原理</h3>\n<h4 id=\"cs结构-2\"><a class=\"markdownIt-Anchor\" href=\"#cs结构-2\"></a> C/S结构</h4>\n<h4 id=\"socket-2\"><a class=\"markdownIt-Anchor\" href=\"#socket-2\"></a> socket</h4>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>wsl2·Ubuntu18.04+vscode+pip+venv配置python3环境</p>\n<blockquote>\n<p>wsl2安装<br />\nUbuntu18.04安装<br />\nvscode配置<br />\nvscode开启远程连接<br />\npip安装<br />\nvenv安装<br />\npython3环境配置<br />\n创建项目并激活虚拟环境<br />\n运行项目</p></blockquote>\n</blockquote>\n<h3 id=\"python实现-2\"><a class=\"markdownIt-Anchor\" href=\"#python实现-2\"></a> python实现</h3>\n<h2 id=\"题目3\"><a class=\"markdownIt-Anchor\" href=\"#题目3\"></a> 题目3</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>使用springboot实现一个支持RESTful接口的WEB应用服务器（java）；</li>\n<li>使用django实现一个支持RESTful接口的WEB应用服务器（python);</li>\n</ol>\n<blockquote>\n<p>要求：从浏览器发送消息，可以回显示消息和图片；</p></blockquote>\n</blockquote>\n<h2 id=\"题目4\"><a class=\"markdownIt-Anchor\" href=\"#题目4\"></a> 题目4</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>使用netty+kafka实现一个支持MQTT协议的消息队列应用框架，模拟多消息生产者和多消费者（java）；</p>\n<blockquote>\n<p>要求：实现一个客户端模拟气象传感器，定时发送（温度、湿度、气速）数据到接收服务器（netty实现），<br />\n支持多对多生产者和消费者方式，即任意一个生产者产生的消息，所有消费者客户端都能接收和显示</p></blockquote>\n</blockquote>\n","feature":true,"text":" 软件架构实验 题目1 使用原始socket()实现一个C/S架构的应用，支持服务器时间回显示 要求：从客户端发送命令，接收服务器的时间并显示到终端 相关原理 C/S结构 socket python实现 环境：python3.9.13 编辑器：vscode 终端：powershe...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"软件架构","slug":"软件架构","count":1,"path":"api/tags/软件架构.json"},{"name":"实验","slug":"实验","count":1,"path":"api/tags/实验.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E5%AE%9E%E9%AA%8C\"><span class=\"toc-text\"> 软件架构实验</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE1\"><span class=\"toc-text\"> 题目1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86\"><span class=\"toc-text\"> 相关原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cs%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> C&#x2F;S结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#socket\"><span class=\"toc-text\"> socket</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#python%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> python实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#java%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\"> Java实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\"> 参考文章</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE2\"><span class=\"toc-text\"> 题目2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86-2\"><span class=\"toc-text\"> 相关原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cs%E7%BB%93%E6%9E%84-2\"><span class=\"toc-text\"> C&#x2F;S结构</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#socket-2\"><span class=\"toc-text\"> socket</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#python%E5%AE%9E%E7%8E%B0-2\"><span class=\"toc-text\"> python实现</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE3\"><span class=\"toc-text\"> 题目3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE4\"><span class=\"toc-text\"> 题目4</span></a></li></ol></li></ol>","author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"英语词汇学习","uid":"71c983416622a77db3751ceb30048d18","slug":"英语词汇学习","date":"2023-05-03T01:51:13.000Z","updated":"2023-05-04T04:36:31.330Z","comments":true,"path":"api/articles/英语词汇学习.json","keywords":null,"cover":"/img/OIP-C-1-1.jpg","text":" 考研词汇学习 用于本人考研英语词汇学习，包括词汇的同义词、反义词、形近词、领域词汇、熟词僻义、词汇变形等。 同义词汇 格式：同义=（word-异意） 动词 同义 word 异意 断言 assert 维护；坚持自己的主张；生效，起作用 affirm 宣称拥护，支持；认可（判决，协...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[],"tags":[{"name":"词汇","slug":"词汇","count":1,"path":"api/tags/词汇.json"}],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}