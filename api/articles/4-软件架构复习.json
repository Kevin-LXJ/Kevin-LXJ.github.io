{"title":"软件架构复习大纲","uid":"088ebac38bba3124d962899c15781d5f","slug":"4-软件架构复习","date":"2023-05-07T13:05:25.000Z","updated":"2023-05-08T11:57:03.026Z","comments":true,"path":"api/articles/4-软件架构复习.json","keywords":null,"cover":null,"content":"<h1 id=\"软件架构复习\"><a class=\"markdownIt-Anchor\" href=\"#软件架构复习\"></a> 软件架构复习</h1>\n<h2 id=\"软件体系结构概论\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构概论\"></a> 软件体系结构概论</h2>\n<ul>\n<li>软件危机</li>\n<li>构件与软件重用\n<ul>\n<li>构件模型及实现</li>\n<li>构件获取</li>\n<li>构件管理\n<ul>\n<li>构件描述</li>\n<li>构件分类与组织</li>\n</ul>\n</li>\n<li>构件重用</li>\n</ul>\n</li>\n<li>软件体系结构的兴起与发展\n<ul>\n<li>软件体系结构的定义</li>\n<li>软件体系结构的应用现状</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"软件体系结构建模\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构建模\"></a> 软件体系结构建模</h2>\n<ul>\n<li>建模的种类\n<ul>\n<li>结构模型</li>\n<li>框架模型</li>\n<li>动态模型</li>\n<li>过程模型</li>\n<li>功能模型</li>\n</ul>\n</li>\n<li>4+1模型\n<ul>\n<li>概述</li>\n<li>逻辑视图</li>\n<li>开发视图</li>\n<li>进程视图</li>\n<li>物理视图</li>\n<li>场景视图</li>\n</ul>\n</li>\n<li>软件体系结构的核心模型</li>\n<li>软件体系结构的生命周期</li>\n</ul>\n<h2 id=\"软件体系结构风格\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构风格\"></a> 软件体系结构风格</h2>\n<ul>\n<li>软件体系结构风格的定义</li>\n<li>经典的软件体系结构风格\n<ul>\n<li>管道与过滤器</li>\n<li>数据抽象和面向对象组织</li>\n<li>基于事件的隐式调用</li>\n<li>分层系统</li>\n<li>仓库系统</li>\n<li>C2风格</li>\n</ul>\n</li>\n<li>C/S风格\n<ul>\n<li>概述</li>\n<li>模型</li>\n<li>组成</li>\n<li>任务分配</li>\n<li>处理流程</li>\n<li>优点</li>\n<li>缺点</li>\n</ul>\n</li>\n<li>三层C/S风格\n<ul>\n<li>模型</li>\n<li>处理流程</li>\n<li>物理结构</li>\n<li>优点</li>\n<li>缺点</li>\n</ul>\n</li>\n<li>三层B/S风格\n<ul>\n<li>概述</li>\n<li>模型</li>\n<li>工作流程</li>\n<li>优点</li>\n<li>缺点</li>\n</ul>\n</li>\n<li>公共对象请求代理(CORBA)\n<ul>\n<li>概述</li>\n<li>特点</li>\n<li>体系结构</li>\n<li>优点</li>\n<li>技术规范\n<ul>\n<li>接口定义语言（IDL）</li>\n<li>接口池（IR）</li>\n<li>动态调用接口（DII）</li>\n<li>对象适配器（OA）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>正交软件体系结构\n<ul>\n<li>概述</li>\n<li>模型</li>\n<li>特点</li>\n<li>特征</li>\n<li>优点</li>\n</ul>\n</li>\n<li>HMB风格\n<ul>\n<li>系统模型概述</li>\n<li>构件模型</li>\n<li>构件接口</li>\n<li>消息总线</li>\n<li>消息过滤</li>\n<li>构件静态结构</li>\n<li>构件动态行为</li>\n<li>运行时刻的系统演化</li>\n</ul>\n</li>\n<li>异构风格\n<ul>\n<li>概述</li>\n<li>组合方式</li>\n<li>内外有别模型</li>\n</ul>\n</li>\n<li>互连系统构成的系统</li>\n<li>领域特定的软件体系结构</li>\n<li>MVC体系结构风格</li>\n<li>MVVM体系结构风格</li>\n</ul>\n<h2 id=\"软件体系结构描述\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构描述\"></a> 软件体系结构描述</h2>\n<ul>\n<li>描述方法的分类</li>\n<li>图形表达工具</li>\n<li>模块内连接语言(MIL)</li>\n<li>基于软件体系结构描述语言ADL</li>\n<li>IEEE P1471标准</li>\n<li>Rational</li>\n</ul>\n<h2 id=\"统一建模语言\"><a class=\"markdownIt-Anchor\" href=\"#统一建模语言\"></a> 统一建模语言</h2>\n<h2 id=\"可扩展标记语言\"><a class=\"markdownIt-Anchor\" href=\"#可扩展标记语言\"></a> 可扩展标记语言</h2>\n<h2 id=\"动态软件体系结构\"><a class=\"markdownIt-Anchor\" href=\"#动态软件体系结构\"></a> 动态软件体系结构</h2>\n<h2 id=\"基于服务的体系结构\"><a class=\"markdownIt-Anchor\" href=\"#基于服务的体系结构\"></a> 基于服务的体系结构</h2>\n<h2 id=\"富互联网应用体系结构\"><a class=\"markdownIt-Anchor\" href=\"#富互联网应用体系结构\"></a> 富互联网应用体系结构</h2>\n<h2 id=\"软件体系结构的分析与测试\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构的分析与测试\"></a> 软件体系结构的分析与测试</h2>\n<h2 id=\"软件体系结构的评估\"><a class=\"markdownIt-Anchor\" href=\"#软件体系结构的评估\"></a> 软件体系结构的评估</h2>\n","feature":true,"text":" 软件架构复习 软件体系结构概论 软件危机 构件与软件重用 构件模型及实现 构件获取 构件管理 构件描述 构件分类与组织 构件重用 软件体系结构的兴起与发展 软件体系结构的定义 软件体系结构的应用现状 软件体系结构建模 建模的种类 结构模型 框架模型 动态模型 过程模型 功能模型...","link":"","photos":[],"count_time":{"symbolsCount":784,"symbolsTime":"1 mins."},"categories":[{"name":"软件架构","slug":"软件架构","count":1,"path":"api/categories/软件架构.json"}],"tags":[{"name":"软件架构","slug":"软件架构","count":2,"path":"api/tags/软件架构.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E5%A4%8D%E4%B9%A0\"><span class=\"toc-text\"> 软件架构复习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E6%A6%82%E8%AE%BA\"><span class=\"toc-text\"> 软件体系结构概论</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%BB%BA%E6%A8%A1\"><span class=\"toc-text\"> 软件体系结构建模</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E9%A3%8E%E6%A0%BC\"><span class=\"toc-text\"> 软件体系结构风格</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\"> 软件体系结构描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%9F%E4%B8%80%E5%BB%BA%E6%A8%A1%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\"> 统一建模语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E6%89%A9%E5%B1%95%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\"> 可扩展标记语言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> 动态软件体系结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> 基于服务的体系结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%8C%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> 富互联网应用体系结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%9A%84%E5%88%86%E6%9E%90%E4%B8%8E%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\"> 软件体系结构的分析与测试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E7%9A%84%E8%AF%84%E4%BC%B0\"><span class=\"toc-text\"> 软件体系结构的评估</span></a></li></ol></li></ol>","author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"设计模式-2","uid":"a39375e630b00cc66be242014aeafe21","slug":"5-设计模式-2","date":"2023-05-08T14:06:39.000Z","updated":"2023-05-09T02:46:46.887Z","comments":true,"path":"api/articles/5-设计模式-2.json","keywords":null,"cover":[],"text":" 设计模式-2 一、 结构型模式 结构型模式关注的是类或对象如何组织,描述如何将类或对象按某种布局组成更大的结构。 它分为类结构型模式和对象结构型模式，前者采用继承机制来组织接口和类，后者釆用组合或聚合来组合对象。 代理（Proxy）模式：为某对象提供一种代理以控制对该对象的访问...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"16 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":3,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":3,"path":"api/tags/设计模式.json"}],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"LR分析","uid":"b09a4c99d2d41cfb593f51df663274d6","slug":"3-LR分析","date":"2023-05-07T08:35:07.000Z","updated":"2023-05-08T11:58:36.274Z","comments":true,"path":"api/articles/3-LR分析.json","keywords":null,"cover":null,"text":" LR分析 概述 LR方法 LR分析法 LR分析器 下推栈 分析表 总控程序 LR(0)分析 LR(0)分析表构造 基本概念 构造过程 罗列所有的LR(0)项目 在文法的每个产生式右部添加一个圆点，就成为G的一个LR(0)项目（简称项目） 拓广文法：保证文法开始符号不出现在任何产...","link":"","photos":[],"count_time":{"symbolsCount":513,"symbolsTime":"1 mins."},"categories":[{"name":"编译原理 - LR分析","slug":"编译原理-LR分析","count":1,"path":"api/categories/编译原理-LR分析.json"}],"tags":[{"name":"编译原理","slug":"编译原理","count":1,"path":"api/tags/编译原理.json"}],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}