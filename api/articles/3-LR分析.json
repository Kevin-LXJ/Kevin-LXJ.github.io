{"title":"LR分析","uid":"b09a4c99d2d41cfb593f51df663274d6","slug":"3-LR分析","date":"2023-05-07T08:35:07.000Z","updated":"2023-05-08T11:58:36.274Z","comments":true,"path":"api/articles/3-LR分析.json","keywords":null,"cover":null,"content":"<h1 id=\"lr分析\"><a class=\"markdownIt-Anchor\" href=\"#lr分析\"></a> LR分析</h1>\n<h2 id=\"概述\"><a class=\"markdownIt-Anchor\" href=\"#概述\"></a> 概述</h2>\n<h3 id=\"lr方法\"><a class=\"markdownIt-Anchor\" href=\"#lr方法\"></a> LR方法</h3>\n<h4 id=\"lr分析法\"><a class=\"markdownIt-Anchor\" href=\"#lr分析法\"></a> LR分析法</h4>\n<p>LR分析器</p>\n<ul>\n<li>下推栈</li>\n<li>分析表</li>\n<li>总控程序</li>\n</ul>\n<h2 id=\"lr0分析\"><a class=\"markdownIt-Anchor\" href=\"#lr0分析\"></a> LR(0)分析</h2>\n<h3 id=\"lr0分析表构造\"><a class=\"markdownIt-Anchor\" href=\"#lr0分析表构造\"></a> LR(0)分析表构造</h3>\n<h4 id=\"基本概念\"><a class=\"markdownIt-Anchor\" href=\"#基本概念\"></a> 基本概念</h4>\n<h4 id=\"构造过程\"><a class=\"markdownIt-Anchor\" href=\"#构造过程\"></a> 构造过程</h4>\n<ul>\n<li>\n<p>罗列所有的LR(0)项目</p>\n<ul>\n<li>在文法的每个产生式右部添加一个圆点，就成为G的一个LR(0)项目（简称项目）</li>\n</ul>\n</li>\n<li>\n<p>拓广文法：保证文法开始符号不出现在任何产生式右部，即增加产生式S’ -&gt; S，并令S’-&gt; •S作为初态项目</p>\n</li>\n<li>\n<p>构造DFA</p>\n<ul>\n<li>·后跟着非终结符的，补充非终结符的项目</li>\n<li>当前状态根据项目的·情况，发射对应射出弧，构造对应的状态</li>\n<li>重复上述过程，直到所有状态都没有新的弧为止</li>\n</ul>\n</li>\n<li>\n<p>SLR</p>\n<ul>\n<li>选定一个含有冲突的状态</li>\n<li>求出归约项的左部的follow集</li>\n<li>求出移进项的•后的first集的并集A</li>\n<li>验证follow集是否有交集B</li>\n<li>验证A是否属于follow集</li>\n<li>当B为空且A不属于follow集时，可以消除冲突\n<ul>\n<li>以follow集为依据，遇到对应的元素作归约</li>\n<li>以first集为依据，遇到对应的元素作移进</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>LR(1)</p>\n<ul>\n<li>由开始项目推出对应的项目集</li>\n<li>求推导该项目的上一步的符号后剩余符号串的first集（若没有则取上一步的搜索符），将其作为搜索符</li>\n</ul>\n</li>\n</ul>\n","text":" LR分析 概述 LR方法 LR分析法 LR分析器 下推栈 分析表 总控程序 LR(0)分析 LR(0)分析表构造 基本概念 构造过程 罗列所有的LR(0)项目 在文法的每个产生式右部添加一个圆点，就成为G的一个LR(0)项目（简称项目） 拓广文法：保证文法开始符号不出现在任何产...","link":"","photos":[],"count_time":{"symbolsCount":513,"symbolsTime":"1 mins."},"categories":[{"name":"编译原理 - LR分析","slug":"编译原理-LR分析","count":1,"path":"api/categories/编译原理-LR分析.json"}],"tags":[{"name":"编译原理","slug":"编译原理","count":1,"path":"api/tags/编译原理.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lr%E5%88%86%E6%9E%90\"><span class=\"toc-text\"> LR分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\"> 概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lr%E6%96%B9%E6%B3%95\"><span class=\"toc-text\"> LR方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#lr%E5%88%86%E6%9E%90%E6%B3%95\"><span class=\"toc-text\"> LR分析法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lr0%E5%88%86%E6%9E%90\"><span class=\"toc-text\"> LR(0)分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lr0%E5%88%86%E6%9E%90%E8%A1%A8%E6%9E%84%E9%80%A0\"><span class=\"toc-text\"> LR(0)分析表构造</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\"> 基本概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\"> 构造过程</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"软件架构复习大纲","uid":"088ebac38bba3124d962899c15781d5f","slug":"4-软件架构复习","date":"2023-05-07T13:05:25.000Z","updated":"2023-05-08T11:57:03.026Z","comments":true,"path":"api/articles/4-软件架构复习.json","keywords":null,"cover":null,"text":" 软件架构复习 软件体系结构概论 软件危机 构件与软件重用 构件模型及实现 构件获取 构件管理 构件描述 构件分类与组织 构件重用 软件体系结构的兴起与发展 软件体系结构的定义 软件体系结构的应用现状 软件体系结构建模 建模的种类 结构模型 框架模型 动态模型 过程模型 功能模型...","link":"","photos":[],"count_time":{"symbolsCount":784,"symbolsTime":"1 mins."},"categories":[{"name":"软件架构","slug":"软件架构","count":1,"path":"api/categories/软件架构.json"}],"tags":[{"name":"软件架构","slug":"软件架构","count":2,"path":"api/tags/软件架构.json"}],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"设计模式-1","uid":"7674181de4c9b5a5cfd21fdfe784296a","slug":"2-设计模式-1","date":"2023-05-06T12:38:18.000Z","updated":"2023-05-10T11:24:00.886Z","comments":true,"path":"api/articles/2-设计模式-1.json","keywords":null,"cover":[],"text":" 设计模式-1 AI为入门者设计的学习思路： 先理解什么是设计模式以及它的重要性和好处。可以阅读一些设计模式概述的文章或者书籍第一章。 了解设计模式的分类和各个类别的主要模式。比如创建型模式有工厂模式、单例模式、建造者模式;结构型模式有代理模式、外观模式、适配器模式;行为型模式有...","link":"","photos":[],"count_time":{"symbolsCount":"52k","symbolsTime":"48 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":3,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":3,"path":"api/tags/设计模式.json"}],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}