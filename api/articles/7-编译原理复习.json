{"title":"编译原理复习","uid":"1213bb1667a1a27ac14ed9acb5d31b07","slug":"7-编译原理复习","date":"2023-06-23T11:48:38.000Z","updated":"2023-06-25T06:30:05.656Z","comments":true,"path":"api/articles/7-编译原理复习.json","keywords":null,"cover":[],"content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>复习要点提纲</p>\n<blockquote>\n<p>第二章(文法构造、句型的最左推导、句型的语法树、短语、直接短语、句柄)<br />\n第三章 (词法分析、8个算法)(必考：子集法)<br />\n第四章(LL(1)文法、FIRST集、FOLLOW集、SELECT集、LL(1)文法的判定、LL(1)文法的构造、LL(1)分析表的构造)<br />\n第六章(LR(0)项、LR(0)项目集规范族、LR(0)分析表的构造、SLR(1)分析表的构造、LR(1)分析表的构造、LALR(1)分析表的构造)<br />\n第七章(给定源代码翻译出目标代码的过程)<br />\n第八章(符号表)<br />\n第九章(划分基本块、寻找回边和循环)<br />\n(给定文法，填写完整的PL0代码)</p></blockquote>\n</blockquote>\n<h1 id=\"文法和语言\"><a class=\"markdownIt-Anchor\" href=\"#文法和语言\"></a> 文法和语言</h1>\n<h2 id=\"符号和符号串\"><a class=\"markdownIt-Anchor\" href=\"#符号和符号串\"></a> 符号和符号串</h2>\n<ul>\n<li>字母表记作：Σ、V</li>\n<li>符号串S的长度记作：|S|\n<ul>\n<li>空串ε的长度为0</li>\n</ul>\n</li>\n<li>符号运算\n<ul>\n<li>连接（乘积）：符号串x连接符号串y记作符号串xy</li>\n<li>幂运算：符号串连接自身n次得到的符号串记作x^n</li>\n<li>闭包：符号串x的闭包记作x^* = x^0 ∪ x^1 ∪ x^2 ∪…（包含空串x^0）</li>\n<li>正闭包：符号串x的正闭包记作x^+ = x^1 ∪ x^2 ∪ x^3 ∪…（不包含空串）</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例题\"><a class=\"markdownIt-Anchor\" href=\"#例题\"></a> 例题</h3>\n<ul>\n<li><img src=\"../img/7/13244b46af6530998e91d26b738715c.png\" alt=\"取一次\" /></li>\n<li><img src=\"../img/7/9024380f534b598e5d83d4483c09859.png\" alt=\"取多次\" /></li>\n</ul>\n<h2 id=\"文法和语言的形式定义\"><a class=\"markdownIt-Anchor\" href=\"#文法和语言的形式定义\"></a> 文法和语言的形式定义</h2>\n<ul>\n<li>文法G = (V<sub>N</sub>, V<sub>T</sub>, P, S)\n<ul>\n<li>V<sub>N</sub>：非终结符集合——大写字母</li>\n<li>V<sub>T</sub>：终结符集合——小写字母</li>\n<li>P：产生式集合/规则集合</li>\n<li>S：开始符号</li>\n</ul>\n</li>\n<li>文法的写法\n<ul>\n<li>使用单箭头</li>\n<li>大写字母-非终结符</li>\n<li>小写字母-终结符</li>\n<li>ε-空串</li>\n<li>第一条产生式/规则的非终结符为开始符号S</li>\n<li>示例\n<ul>\n<li><img src=\"../img/7/893a24b428c59b3c51ed1a87b2f73ac.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>直接推导\n<ul>\n<li>定义：若存在符号串α、β、γ，使得αAβ推导出αγβ，则称A→γ是一步推导（直接推导）</li>\n<li><img src=\"../img/7/2a60e33e9d818325a469bb61c03cc97.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/2f4e0bf08e5e4ce89b52998cb049d4e.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"文法和语言的形式定义-2\"><a class=\"markdownIt-Anchor\" href=\"#文法和语言的形式定义-2\"></a> 文法和语言的形式定义</h2>\n<ul>\n<li>句型：根据文法G，从开始符号S推导出的符号串称为文法G的句型（可理解为产生式的右部，经过0~多次推导后的右部）</li>\n<li>句子：全为终结符的句型称为文法G的句子</li>\n<li>语言：文法G的所有句子的集合称为文法G的语言，记作L(G)</li>\n</ul>\n<h3 id=\"例题-2\"><a class=\"markdownIt-Anchor\" href=\"#例题-2\"></a> 例题</h3>\n<ul>\n<li><img src=\"../img/7/c74f0268e7e6a3b57ae851d768bf12d.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"文法的类型\"><a class=\"markdownIt-Anchor\" href=\"#文法的类型\"></a> 文法的类型</h2>\n<ul>\n<li>0型文法（短语结构文法）\n<ul>\n<li>任意产生式都可以是形如α→β的形式，其中α∈(V<sub>N</sub>+V<sub>T</sub>)<sup>*</sup>，β∈(V<sub>N</sub>+V<sub>T</sub>)<sup>*</sup></li>\n<li>左部：至少有一个非终结符V<sub>N</sub></li>\n<li>右部：可以是任意符号串</li>\n</ul>\n</li>\n<li>1型文法（上下文有关文法）\n<ul>\n<li>任意产生式都可以是形如αAβ→αγβ的形式，其中A∈V<sub>N</sub>，γ∈(V<sub>N</sub>+V<sub>T</sub>)<sup>+</sup>，α、β∈(V<sub>N</sub>+V<sub>T</sub>)<sup>*</sup>\n<ul>\n<li>即对非终结符进行替换时一般不允许替换成ε</li>\n</ul>\n</li>\n<li>除（S→ε）以外，任意产生式的右部长度&gt;=左部的长度</li>\n</ul>\n</li>\n<li>2型文法（上下文无关文法）\n<ul>\n<li>任意产生式都可以是形如A→γ的形式，其中A∈V<sub>N</sub>，γ∈(V<sub>N</sub>+V<sub>T</sub>)<sup>*</sup></li>\n<li>产生式的左部只能是一个非终结符</li>\n</ul>\n</li>\n<li>3型文法（正规文法）\n<ul>\n<li>任意产生式都可以是形如A→aB或A→a的形式，其中A、B∈V<sub>N</sub>，a∈V<sub>T</sub>，即产生式的右部只能是一个终结符或一个终结符后跟一个非终结符</li>\n<li>产生式的左部只能是一个非终结符</li>\n<li>产生式的右部只能是一个终结符或一个终结符后跟一个非终结符</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"例题根据生成的语言反推文法\"><a class=\"markdownIt-Anchor\" href=\"#例题根据生成的语言反推文法\"></a> 例题（根据生成的语言反推文法）</h3>\n<ul>\n<li><img src=\"../img/7/02c11390ac33afe3b12ebc9a26d6d60.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/803ac5f3c23bc60a860e3d43756f09d.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/c773939523d7f1acc740ea80f8bda59.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/165db81bd8aac72f647b16ceccbf1ea.png\" alt=\"Alt text\" /></li>\n</ul>\n<h2 id=\"语法树\"><a class=\"markdownIt-Anchor\" href=\"#语法树\"></a> 语法树</h2>\n<ul>\n<li>语法树\n<ul>\n<li>定义：给定文法G，从开始符号S推导出符号串w的过程中，每一步推导都可以用一棵树来表示，这棵树称为语法树</li>\n<li>语法树的构造\n<ul>\n<li>根节点：开始符号S</li>\n<li>叶节点：终结符或空串ε</li>\n<li>中间节点：非终结符</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>最左/最右推导\n<ul>\n<li>定义：在推导过程中，每一步都选择最左/最右的非终结符进行替换</li>\n<li>最左/最右推导的语法树\n<ul>\n<li>最左推导：语法树的叶节点从左到右与推导过程中的符号串相同</li>\n<li>最右推导：语法树的叶节点从右到左与推导过程中的符号串相同</li>\n</ul>\n</li>\n<li>最左/最右推导的语法树是唯一的</li>\n<li>最右推导的语法树称为规范推导树\n<ul>\n<li>由规范推导所得到的句型称为规范句型</li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li><img src=\"../img/7/baa6a24ff79dc05338fec5562ce8b13.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二义性\n<ul>\n<li>定义：若一个文法G存在两棵不同的语法树，都可以推导出同一个句子w，则称文法G是二义性的</li>\n<li>二义性的判定\n<ul>\n<li>从左到右扫描句子w，若在某一步推导中，有两个或两个以上的非终结符可以进行替换，则文法G是二义性的</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"句型的分析\"><a class=\"markdownIt-Anchor\" href=\"#句型的分析\"></a> 句型的分析</h2>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>句型可以由不同方式构成对应的语法树，一般采用最右推导的方式构造语法树，这种方式可以得到句柄</p></blockquote>\n<ul>\n<li>短语：在一个句型中，若一个子串是某个非终结符的右部，则称这个子串为短语（包含非终结符的子串必须可以推导出全是终结符的句子）</li>\n<li>直接短语：若一个短语中不包含其他短语，则称这个短语为直接短语（理解为只有一步/直接推导）</li>\n<li>句柄：在一个句型中，若一个子串是某个非终结符的右部，且这个非终结符是最右推导中最左的非终结符，则称这个子串为句柄（理解为最右推导的最左符号串）</li>\n<li>示例\n<ul>\n<li>最右推导：\n<ul>\n<li>必须先选E+T替换E =&gt; E + T</li>\n<li>再选F替换T =&gt; E + F</li>\n<li>再选i替换F =&gt; E + i</li>\n<li>再选T替换E =&gt; T + i</li>\n<li>再选T*F替换T =&gt; T * F + i</li>\n<li>再选i替换F =&gt; T * i + i</li>\n<li>再选F替换T =&gt; F * i + i</li>\n<li>最后选i替换F =&gt; i * i + i</li>\n</ul>\n</li>\n<li><img src=\"../img/7/e91fec65c15f29de223ab407e8a346e.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\"></a> 练习</h2>\n<ul>\n<li><img src=\"../img/7/e46711588b2f491e48d3ec03714c286.png\" alt=\"Alt text\" /></li>\n</ul>\n<h1 id=\"词法分析\"><a class=\"markdownIt-Anchor\" href=\"#词法分析\"></a> 词法分析</h1>\n<h2 id=\"正规式和正规文法\"><a class=\"markdownIt-Anchor\" href=\"#正规式和正规文法\"></a> 正规式和正规文法</h2>\n<ul>\n<li>正规式\n<ul>\n<li>定义：正规式是由正规运算符和正规符号构成的表达式</li>\n<li>正规式的运算符\n<ul>\n<li>选择运算符：|，表示或</li>\n<li>连接运算符：，，表示连接</li>\n<li>闭包运算符：*，表示闭包</li>\n</ul>\n</li>\n<li>正规符号\n<ul>\n<li>终结符</li>\n<li>空串ε</li>\n</ul>\n</li>\n<li>正规式的值\n<ul>\n<li>正规式的值是一个正规集</li>\n<li>正规集是一个由正规符号构成的集合</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>理解\n<ul>\n<li>正规式是正规文法的一种简化表示\n<ul>\n<li>正规式表示为符号串</li>\n<li>正规文法表示为产生式</li>\n<li><img src=\"../img/7/7e07587a78966b4236be1fb1bd0631d.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>字母表的每个字母（终结符）都属于一个最简单的正规式</li>\n<li>正规式通过正规运算符可得到新的正规式\n<ul>\n<li>L(正规式)=该正规式表示的正规集\n<ul>\n<li>L(字母表)=该字母表所表示的所有句子集合</li>\n</ul>\n</li>\n<li>L(正规式1 运算符 正规式2)=L(正规式1) 运算符 L(正规式2)</li>\n<li><img src=\"../img/7/3971dcd1a8f284a454bdc33fb1abf7e.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>可以用一个正规式描述3型文法的语言\n<ul>\n<li><img src=\"../img/7/0038e4d8b9feddf4fd4d60a51cddd8e.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>例题\n<ul>\n<li><img src=\"../img/7/c3c6e69f55f155270a184cd32cdce3c.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/eea42b3ebf2568645762da225f89fcd.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/86f451fe1ae892830c2e76875cfacd2.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"有穷自动机\"><a class=\"markdownIt-Anchor\" href=\"#有穷自动机\"></a> 有穷自动机</h2>\n<ul>\n<li>定义：作为一种识别装置，它能准确地识别正规集，即识别正规文法所定义的语言和正规式所表示的集合</li>\n<li>分类\n<ul>\n<li>确定的有穷自动机DFA</li>\n<li>不确定的有穷自动机NFA</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"确定的有穷自动机dfa\"><a class=\"markdownIt-Anchor\" href=\"#确定的有穷自动机dfa\"></a> 确定的有穷自动机DFA</h3>\n<ul>\n<li>定义：确定的有穷自动机是一个五元组M=(K,Σ,f,S,Z)，其中\n<ul>\n<li>K是有穷状态集</li>\n<li>Σ是输入符号表</li>\n<li>f是状态转换函数，即f:K×Σ→K</li>\n<li>S是初始状态</li>\n<li>Z是终止状态集</li>\n</ul>\n</li>\n<li>DFA的表示\n<ul>\n<li>若DFA含有m个状态、n个输入符号，那么该状态图含有m个节点，每个节点最多有n条弧射出，每条弧上标有一个输入符号</li>\n<li>整个图含有唯一的一个初始状态，若干个终止状态\n<ul>\n<li>初态结点冠以双箭头“=&gt;”或标以“-”</li>\n<li>终态结点冠以双圆圈“○”或标以“+”</li>\n</ul>\n</li>\n<li><img src=\"../img/7/740e2a0601768b97024d9f5c1ca090a.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/c48d1e9cff8577cbaaa720344e13a14.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>DFA的识别过程\n<ul>\n<li>从初始状态开始，根据输入符号，沿着状态转换函数f的指示，依次进入下一个状态，直到输入符号串结束</li>\n<li>若最后所处的状态是终止状态，则认为该输入符号</li>\n<li><img src=\"../img/7/5953512e0c0110193f711d441cc47ef.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/24537004a72efae98ac5bdd3ad5825d.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"不确定的有穷自动机nfa\"><a class=\"markdownIt-Anchor\" href=\"#不确定的有穷自动机nfa\"></a> 不确定的有穷自动机NFA</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>不确定主要是指后继状态可有多个。</li>\n<li>DFA是NFA的特例，即NFA是DFA的扩展</li>\n</ul></blockquote>\n<ul>\n<li>定义：不确定的有穷自动机是一个五元组M=(S,Σ,f,S<sub>0</sub>,Z)，其中\n<ul>\n<li>S是有穷状态集</li>\n<li>Σ是输入符号表</li>\n<li>f是状态转换函数，即f:S×Σ→2<sup>S</sup>(S的幂集)</li>\n<li>S<sub>0</sub>是初始状态集</li>\n<li>Z是终止状态集</li>\n</ul>\n</li>\n<li>NFA的表示\n<ul>\n<li>若NFA含有m个状态、n个输入符号，那么该状态图含有m个节点，每个节点最多有n条弧射出，每条弧上标有一个输入符号</li>\n<li>整个图含有若干个初始状态，若干个终止状态\n<ul>\n<li>初态结点冠以双箭头“=&gt;”或标以“-”</li>\n<li>终态结点冠以双圆圈“○”或标以“+”</li>\n</ul>\n</li>\n<li><img src=\"../img/7/012b5d18e82313ffdec9296beb61b78.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"nfa的确定化nfa转化为dfa\"><a class=\"markdownIt-Anchor\" href=\"#nfa的确定化nfa转化为dfa\"></a> NFA的确定化（NFA转化为DFA）</h3>\n<ul>\n<li>状态集合的运算\n<ul>\n<li>状态集合I的ε-闭包，记作ε-closure(I)，即从状态集合中的任何一个状态出发，经过任意多个ε弧可达的状态集合</li>\n<li>状态集合I的a弧转换，记作move(I,a)=J，即从状态集合I中的任何一个状态出发，经过1个a弧可达的状态集合J</li>\n</ul>\n</li>\n<li>子集法\n<ul>\n<li>画出NFA的状态矩阵，每个状态矩阵的行表示一个状态集合，每个状态矩阵的列表示一个输入符号</li>\n<li>将状态矩阵的初始状态0，求出其ε-闭包后，作为DFA的初始状态T<sub>0</sub></li>\n<li>（第一行）DFA由初始状态T<sub>0</sub>开始，求出其a弧和其他弧转换后的状态集合的ε-闭包</li>\n<li>（第二行）查找上面未被推导的新状态作为下一行的初始状态，求出其a弧和其他弧转换后的状态集合的ε-闭包</li>\n<li>重复上述过程，直到所有状态集合都被推导出来</li>\n<li>重新命名状态集合，使其成为DFA的状态</li>\n<li>示例\n<ul>\n<li><img src=\"../img/7/376e99fc2dd01d5c8ecfb30c6dc9ee9.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>例题</li>\n<li><img src=\"../img/7/39eae8a8e3d98f8126307e4773243a2.png\" alt=\"Alt text\" /></li>\n<li>初始状态T<sub>0</sub>:{S,3,1}\n<ul>\n<li>ε-closure(S)={S,3,1}</li>\n</ul>\n</li>\n<li>第一行\n<ul>\n<li>{S,3,1}</li>\n<li>move(T<sub>0</sub>,a)={3,5}\n<ul>\n<li>ε-closure(3,5)={3,1,5}</li>\n</ul>\n</li>\n<li>move(T<sub>0</sub>,b)={3,6}\n<ul>\n<li>ε-closure(3,6)={3,1,6}</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第二行\n<ul>\n<li>{3,1,5}</li>\n<li>move({3,1,5},a)={3,5,2}\n<ul>\n<li>ε-closure(3,5,2)={3,1,5,2,4,Z}</li>\n</ul>\n</li>\n<li>move({3,1,5},b)={3,6}\n<ul>\n<li>ε-closure(3,6)={3,1,6}</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>第三行\n<ul>\n<li>{3,1,6}</li>\n<li>move({3,1,6},a)={3,5}\n<ul>\n<li>ε-closure(3,5)={3,1,5}</li>\n</ul>\n</li>\n<li>move({3,1,6},b)={3,6,2}\n<ul>\n<li>ε-closure(3,6,2)={3,1,6,2,4,Z}</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>省略</li>\n</ul>\n<h3 id=\"dfa的最小化dfa的化简\"><a class=\"markdownIt-Anchor\" href=\"#dfa的最小化dfa的化简\"></a> DFA的最小化（DFA的化简）</h3>\n<ul>\n<li>分割法\n<ul>\n<li>定义：把一个DFA的状态分成一些不相交的子集，使得任何不同的两子集的状态都是可区别的，而同一子集中的任何两个状态都是等价的</li>\n<li>将DFA的状态集按照终态和非终态分成两个子集，记作P<sub>0</sub>={F,Q-F}，其中F是终态集，Q-F是非终态集</li>\n<li>重复下面的过程，直到不能再分割为止\n<ul>\n<li>对于P<sub>i</sub>中的每个子集，对于每个输入符号a，求出其a弧转换后的状态集合，将P<sub>i</sub>中的每个子集按照a弧转换后的状态集合分割成若干个子集，记作P<sub>i+1</sub></li>\n<li>若P<sub>i</sub>与P<sub>i+1</sub>相等，则停止分割</li>\n</ul>\n</li>\n<li>划分到最后，得到的子集就是最小化的DFA的状态集</li>\n<li>对每个子集，取一个代表状态，作为最小化DFA的状态；若该子集中含有终态，则该代表状态为终态；若该子集中含有初态，则该代表状态为初态</li>\n</ul>\n</li>\n<li>示例<br />\n- <img src=\"../img/7/65f15a3a780709bb986282d0551b893.png\" alt=\"Alt text\" /><br />\n- <img src=\"../img/7/85160ca9a37a56c417a6049ea68d0bb.png\" alt=\"Alt text\" /><br />\n- <img src=\"../img/7/9007445a07b36bc3e72661ccb10dc20.png\" alt=\"Alt text\" /><br />\n- <img src=\"../img/7/1cc6bf6dbc881b77b8ecfefc6a0b9ed.png\" alt=\"Alt text\" /><br />\n- <img src=\"../img/7/3dab7272de4db73fd3087d6ed38ef35.png\" alt=\"Alt text\" /></li>\n</ul>\n<h2 id=\"有穷自动机和正规式的等价性\"><a class=\"markdownIt-Anchor\" href=\"#有穷自动机和正规式的等价性\"></a> 有穷自动机和正规式的等价性</h2>\n<h3 id=\"有穷自动机转化为正规式\"><a class=\"markdownIt-Anchor\" href=\"#有穷自动机转化为正规式\"></a> 有穷自动机转化为正规式</h3>\n<ul>\n<li>替换规则\n<ul>\n<li><img src=\"../img/7/01ec1651c2bb11a48504e9e94eb72d9.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li>NFA转化为正规式\n<ul>\n<li>添加新的初态和终态（原初态指向新的初态，原终态指向新的终态）\n<ul>\n<li><img src=\"../img/7/ce130a934bdf94ff74722d971f24f98.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>根据替换规则逐步转化为正规式\n<ul>\n<li><img src=\"../img/7/2ba399dd6e050c3863e51fe69d8655d.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/0920302cd286b782cb59a933a53336d.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>DFA转化为正规式\n<ul>\n<li>添加新的初态和终态（原初态指向新的初态，原终态指向新的终态）\n<ul>\n<li><img src=\"../img/7/e8489102051628ab7909e6872831b25.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>根据替换规则逐步转化为正规式\n<ul>\n<li><img src=\"../img/7/282330fc850f9309e25c9f75171dc5d.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"正规式转化为有穷自动机\"><a class=\"markdownIt-Anchor\" href=\"#正规式转化为有穷自动机\"></a> 正规式转化为有穷自动机</h3>\n<ul>\n<li>分裂规则\n<ul>\n<li><img src=\"../img/7/6a190026e9ad54b30accb8d52fbcdc4.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li>由正规式a 构造一个如下仅有两个结点x,y的状态图，再按所引入的3条正规式分裂规则分裂a\n<ul>\n<li><img src=\"../img/7/29ef60464a10174eb8eda1bd19ef26b.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>将所得的NFA M(因为包含ε弧)进行确定化就得到DFA\n<ul>\n<li><img src=\"../img/7/b6456700278ec5d0faa26eb4e70580f.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/87d45d3bbc2ecd41c29eebf970555e3.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"有穷自动机和正规文法的等价性\"><a class=\"markdownIt-Anchor\" href=\"#有穷自动机和正规文法的等价性\"></a> 有穷自动机和正规文法的等价性</h2>\n<h3 id=\"正规文法转化为有穷自动机\"><a class=\"markdownIt-Anchor\" href=\"#正规文法转化为有穷自动机\"></a> 正规文法转化为有穷自动机</h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>正规文法分为右线性文法和左线性文法。但对一个正规文法，不能既是左线性，又是右线性。</p></blockquote>\n<ul>\n<li>构造方法\n<ul>\n<li>有穷自动机M的字母表与正规文法G的终结符相同。</li>\n<li>为G中的每一个非终结符生成M的一个状态，G的开始符S表示开始状态S</li>\n<li>增加一个新状态Z，作为NFA的终态</li>\n<li>对正规文法G中的形如A→tB的规则构造有穷自动机M的一个转换函数f(A,t)=B。</li>\n<li>对正规文法G中形如A→t的产生式，构造一个转换函数f(A,t)=Z。</li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li><img src=\"../img/7/b6c0099913cac637c5d1f6db170c498.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"有穷自动机转化为正规文法\"><a class=\"markdownIt-Anchor\" href=\"#有穷自动机转化为正规文法\"></a> 有穷自动机转化为正规文法</h3>\n<ul>\n<li>构造方法\n<ul>\n<li>对转换函数f(A,t)=B,可写产生式： A → tB</li>\n<li>对终态增加产生式： Z → ε</li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li><img src=\"c:/Users/12996/AppData/Local/Temp/WeChat%20Files/2fe2a437c4a1e5e2a42fa2a804da6e3.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"练习-2\"><a class=\"markdownIt-Anchor\" href=\"#练习-2\"></a> 练习</h3>\n<ul>\n<li>正规式转化为DFA\n<ul>\n<li><img src=\"../img/7/a051f55cb2a0684f50f4f32ad388bd9.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>DFA最小化\n<ul>\n<li><img src=\"../img/7/9ba4e3d28c950b96b0cbfc3903540c1.png\" alt=\"Alt text\" /></li>\n<li><img src=\"../img/7/bf5b640d4b46594dbcbd87f70e81421.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>正规文法转化为DFA\n<ul>\n<li><img src=\"../img/7/e718ee9448df0714373bfe995edee16.png\" alt=\"\" /></li>\n<li><img src=\"../img/7/43b7d48933766a598395a7aafd3d243.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>DFA转化为正规文法\n<ul>\n<li><img src=\"../img/7/7bdf35e107953067becf8033a3df68c.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n<li>NFA最小化\n<ul>\n<li><img src=\"../img/7/01e7d057a2e7c9c832ad32937d1214e.png\" alt=\"\" /></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"语法分析\"><a class=\"markdownIt-Anchor\" href=\"#语法分析\"></a> 语法分析</h1>\n<ul>\n<li>First集：一个文法符号串的首符号的集合\n<ul>\n<li>First(X) = {a|X =&gt;* aβ, a∈Vt, β∈V*}</li>\n<li>若X∈V<sub>T</sub>（终结符）,则FIRST(X)={X}</li>\n<li>若X属于V<sub>N</sub>（非终结符）,且有产生式X→a…，则把a加入到FIRST(X)中;若X→ε是一条产生式,则把ε也加到FIRST(X)中.</li>\n<li><img src=\"../img/7/2388d7de18a3336ef7f1246e451c936.png\" alt=\"Alt text\" /></li>\n<li>First(A)判断方法\n<ul>\n<li>找到所有左部为A的产生式\n<ul>\n<li>若右部第一个符号为终结符,则把该符号加入到FIRST(A)中</li>\n<li>若右部第一个符号为ε,则把ε加入到FIRST(A)中</li>\n<li>若右部第一个符号的FIRST集合不包含ε,则把该非终结符的FIRST集合加入到FIRST(A)中</li>\n<li>若右部第一个符号的FIRST集合包含ε,则把右部第二个符号的FIRST集合加入到FIRST(A)中,以此类推,直到右部第一个符号的FIRST集合不包含ε,则停止，若一直到最后一个符号的FIRST集合都包含ε,则把ε加入到FIRST(A)中</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li><img src=\"c:/Users/12996/AppData/Local/Temp/WeChat%20Files/2030385d389b5143b42b38ea137e725.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Follow集：一个文法符号串的后继符号的集合\n<ul>\n<li>Follow(A) = {a|S=&gt;<em>αAaβ, a∈Vt, α,β∈V</em>}</li>\n<li>若A是文法的开始符号S,则把#加入到FOLLOW(S)中.</li>\n<li>若有产生式A→αBβ,则把FIRST(β)-{ε}加入到FOLLOW(B)中.</li>\n<li>若有产生式A→αB,或者A→αBβ且ε∈FIRST(β),则把FOLLOW(A)加入到FOLLOW(B)中.</li>\n<li>Follow(A)判断方法\n<ul>\n<li>找到右部有A的产生式\n<ul>\n<li>若A右边第一个为终结符号，则将其加入到Follow(A)中</li>\n<li>若A右边第一个为非终结符号，则将其First集中的非空元素加入到Follow(A)中\n<ul>\n<li>若First集中有ε，则将Follow(产生式的左部)加入到Follow(A)中</li>\n</ul>\n</li>\n<li>若A在右部最后，则将Follow(产生式的左部)加入到Follow(A)中</li>\n</ul>\n</li>\n<li>若A为开始符号，则将#加入到Follow(A)中</li>\n<li>follow集不包含ε</li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li><img src=\"../img/7/55669e190ce8c968e91c7b2c142eb64.png\" alt=\"Alt text\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Select集：一个产生式的First集和Follow集的并集\n<ul>\n<li>Select(A→α)判断方法\n<ul>\n<li>若α=&gt;*ε成立,则Select(A→α) = ( First(α) - {ε} )∪ Follow(A)</li>\n<li>若α=&gt;*ε不成立,则Select(A→α) = First(α)</li>\n</ul>\n</li>\n<li>示例\n<ul>\n<li><img src=\"../img/7/d776b7743ada5484fd5287a4a05c5c2.png\" alt=\"Alt text\" /></li>\n<li>第四条右部为空，先求出First(ε)-{ε}=∅，再求出Follow(ε)=Follow(B)=</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","feature":true,"text":" 复习要点提纲 第二章(文法构造、句型的最左推导、句型的语法树、短语、直接短语、句柄) 第三章 (词法分析、8个算法)(必考：子集法) 第四章(LL(1)文法、FIRST集、FOLLOW集、SELECT集、LL(1)文法的判定、LL(1)文法的构造、LL(1)分析表的构造) 第六...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\"> 文法和语言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%A6%E5%8F%B7%E5%92%8C%E7%AC%A6%E5%8F%B7%E4%B8%B2\"><span class=\"toc-text\"> 符号和符号串</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\"> 例题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\"> 文法和语言的形式定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89-2\"><span class=\"toc-text\"> 文法和语言的形式定义</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98-2\"><span class=\"toc-text\"> 例题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%B3%95%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\"> 文法的类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98%E6%A0%B9%E6%8D%AE%E7%94%9F%E6%88%90%E7%9A%84%E8%AF%AD%E8%A8%80%E5%8F%8D%E6%8E%A8%E6%96%87%E6%B3%95\"><span class=\"toc-text\"> 例题（根据生成的语言反推文法）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E6%A0%91\"><span class=\"toc-text\"> 语法树</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%A5%E5%9E%8B%E7%9A%84%E5%88%86%E6%9E%90\"><span class=\"toc-text\"> 句型的分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\"> 练习</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\"> 词法分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E8%A7%84%E5%BC%8F%E5%92%8C%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95\"><span class=\"toc-text\"> 正规式和正规文法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA\"><span class=\"toc-text\"> 有穷自动机</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E5%AE%9A%E7%9A%84%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BAdfa\"><span class=\"toc-text\"> 确定的有穷自动机DFA</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E7%A1%AE%E5%AE%9A%E7%9A%84%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BAnfa\"><span class=\"toc-text\"> 不确定的有穷自动机NFA</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nfa%E7%9A%84%E7%A1%AE%E5%AE%9A%E5%8C%96nfa%E8%BD%AC%E5%8C%96%E4%B8%BAdfa\"><span class=\"toc-text\"> NFA的确定化（NFA转化为DFA）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#dfa%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%96dfa%E7%9A%84%E5%8C%96%E7%AE%80\"><span class=\"toc-text\"> DFA的最小化（DFA的化简）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA%E5%92%8C%E6%AD%A3%E8%A7%84%E5%BC%8F%E7%9A%84%E7%AD%89%E4%BB%B7%E6%80%A7\"><span class=\"toc-text\"> 有穷自动机和正规式的等价性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%AD%A3%E8%A7%84%E5%BC%8F\"><span class=\"toc-text\"> 有穷自动机转化为正规式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E8%A7%84%E5%BC%8F%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA\"><span class=\"toc-text\"> 正规式转化为有穷自动机</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA%E5%92%8C%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E7%9A%84%E7%AD%89%E4%BB%B7%E6%80%A7\"><span class=\"toc-text\"> 有穷自动机和正规文法的等价性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA\"><span class=\"toc-text\"> 正规文法转化为有穷自动机</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%89%E7%A9%B7%E8%87%AA%E5%8A%A8%E6%9C%BA%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95\"><span class=\"toc-text\"> 有穷自动机转化为正规文法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0-2\"><span class=\"toc-text\"> 练习</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90\"><span class=\"toc-text\"> 语法分析</span></a></li></ol>","author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"马克思主义复习","uid":"eb05dba7bd0d4c39c42b68d64c5450a9","slug":"8-马克思主义复习","date":"2023-06-23T11:51:16.000Z","updated":"2023-06-27T08:08:46.727Z","comments":true,"path":"api/articles/8-马克思主义复习.json","keywords":null,"cover":null,"text":" 复习纲要 报告（2000字，无需目录，摘要，关键词，重点论证，考试时候交报告——小组单元） 题型：单选20/1；多选15/2；简答3/10【书中出题字数少的需要：要点+说明】；论述1/20【无需结合教材要点】 0：（马克思主义、创立时间、理论来源、发展脉络、特征、当代价值和时代...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"设计模式-3","uid":"1282d363af11675dd608d5f2af6828ad","slug":"6-设计模式-3","date":"2023-05-08T15:06:41.000Z","updated":"2023-05-10T12:00:50.977Z","comments":true,"path":"api/articles/6-设计模式-3.json","keywords":null,"cover":[],"text":" 设计模式-3 一、 行为型模式 行为型模式关注的是各个类之间的相互作用，将职责划分清楚，使代码更加地清晰。描述程序在运行时复杂的流程控制，即描述多个类或对象之间怎样相互协作共同完成单个对象都无法单独完成的任务，它涉及算法与对象间职责的分配。 行为型模式分为类行为模式和对象行为模...","link":"","photos":[],"count_time":{"symbolsCount":"40k","symbolsTime":"36 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":3,"path":"api/categories/设计模式.json"}],"tags":[{"name":"设计模式","slug":"设计模式","count":3,"path":"api/tags/设计模式.json"}],"author":{"name":"Kevin","slug":"blog-author","avatar":"/img/avatar/OIP-C.jpg","link":"/","description":"我真的是ikun","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}